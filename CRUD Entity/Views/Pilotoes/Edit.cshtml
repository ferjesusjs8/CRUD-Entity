@model CRUD_Entity.Models.Piloto

@{
    ViewBag.Title = "Edit";
}

<h2>Editar</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Piloto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IdPiloto)

@* ====================================================================================================================================== *@

    @* == NOME == *@

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @maxlength = "70", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    @* == RG == *@

    <div class="form-group">
        @Html.LabelFor(model => model.RG, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.RG, new { htmlAttributes = new { @maxlength = "16", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.RG, "", new { @class = "text-danger" })
        </div>
    </div>

    @* == CPF == *@

    <div class="form-group">
        @Html.LabelFor(model => model.CPFCNPJ, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CPFCNPJ, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CPFCNPJ, "", new { @class = "text-danger" })
        </div>
    </div>

    @* == DATA DE NASCIMENTO == *@

    <div class="form-group">
        @Html.Label("Data de Nascimento:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @maxlength = "10", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
        </div>
    </div>

    @* == NÚMERO DA LICENÇA *@

    <div class="form-group">
        @Html.LabelFor(model => model.NumeroLicenca, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumeroLicenca, new { htmlAttributes = new { @maxlength = "16", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NumeroLicenca, "", new { @class = "text-danger" })
        </div>
    </div>

    @* == ATIVO? == *@

    <div class="form-group">
        @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Ativo, new { htmlAttributes = new { @class = "check-box" } })
            @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
        </div>
    </div>

@* ====================================================================================================================================== *@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Salvar Edições" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Voltar a lista", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
